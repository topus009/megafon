{"version":3,"sources":["reducersPrepareDataHelpers.js"],"names":["requiredFields","defaultFieldErrors","newFieldErrors","hasErrors","preparedErrorData","state","payload","editUserFieldErrors","fieldErrors","errors","preparedRequiredFieldsData","forEach","key"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,kBAAzB,QAAmD,uBAAnD;AACA,SAASC,cAAT,EAAyBC,SAAzB,QAA0C,kBAA1C;;AAEA,MAAMC,oBAAoB,CAACC,KAAD,EAAQC,OAAR,KAAoB;AAC5C,QAAMC,sBAAsBL,eAAeG,KAAf,EAAsBC,OAAtB,CAA5B;AACA,SAAO;AACLE,iBAAaD,mBADR;AAELE,YAAQN,UAAUI,mBAAV;AAFH,GAAP;AAID,CAND;;AAQA,MAAMG,6BAA6B,MAAM;AACvC,QAAMF,cAAc,EAAE,GAAGP,kBAAL,EAApB;AACAD,iBAAeW,OAAf,CAAuBC,OAAO;AAC5BJ,gBAAYI,GAAZ,IAAmB,IAAnB;AACD,GAFD;AAGA,SAAO;AACLJ,eADK;AAELC,YAAQN,UAAUK,WAAV;AAFH,GAAP;AAID,CATD;;AAWA,SAASJ,iBAAT,EAA4BM,0BAA5B","file":"reducersPrepareDataHelpers.js","sourcesContent":["import { requiredFields, defaultFieldErrors } from '../config/fieldErrors';\nimport { newFieldErrors, hasErrors } from './reducersHelper';\n\nconst preparedErrorData = (state, payload) => {\n  const editUserFieldErrors = newFieldErrors(state, payload);\n  return {\n    fieldErrors: editUserFieldErrors,\n    errors: hasErrors(editUserFieldErrors),\n  };\n};\n\nconst preparedRequiredFieldsData = () => {\n  const fieldErrors = { ...defaultFieldErrors };\n  requiredFields.forEach(key => {\n    fieldErrors[key] = true;\n  });\n  return {\n    fieldErrors,\n    errors: hasErrors(fieldErrors),\n  };\n};\n\nexport { preparedErrorData, preparedRequiredFieldsData };\n"]}