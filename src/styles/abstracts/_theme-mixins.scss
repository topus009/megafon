$themes: (
  1: $theme-1,
  2: $theme-2,
);

@mixin themify($themes) {
  @each $theme, $map in $themes {
    .theme-#{$theme} & {
      $theme-map: () !global;

      @each $key, $submap in $map {
        $value: map-get(map-get($themes, $theme), '#{$key}');
        $theme-map: map-merge(
          $theme-map,
          (
            $key: $value,
          )
        ) !global;
      }

      @content;
      $theme-map: null !global;
    }
  }
}

@function themed($key) {
  @return map-get($theme-map, $key);
}

@mixin themePreview($color_one, $color_two) {
  background: -moz-linear-gradient(135deg, $color_one 50%, $color_two 50%);
  background: -webkit-gradient(linear, left top, right bottom, color-stop(50%, $color_two) color-stop(50%, $color_one));
  background: -webkit-linear-gradient(135deg, $color_one 50%, $color_two 50%);
  background: -o-linear-gradient(135deg, $color_one 50%, $color_two 50%);
  background: -ms-linear-gradient(135deg, $color_one 50%, $color_two 50%);
  background: linear-gradient(315deg, $color_one 50%, $color_two 50%);
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#{$color_two}', endColorstr='#{$color_one}',GradientType=1);
}

@mixin themeExample() {
  $theme_1_preview_color_1: #00be73;
  $theme_1_preview_color_2: #5f19aa;

  $theme_2_preview_color_1: #212121;
  $theme_2_preview_color_2: #5f19aa;
  &.theme1 {
    @include themePreview($theme_1_preview_color_1, $theme_1_preview_color_2);
  }
  &.theme2 {
    @include themePreview($theme_2_preview_color_1, $theme_2_preview_color_2);
  }
}
